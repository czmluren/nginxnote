nginx 的配置以及常见小问题 如下:
(1)端口被占用
　　nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use) 
　　nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
　　nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
　　nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
　　nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
　　nginx: [emerg] still could not bind()
  问题描述：地址已被使用。可能nginx服务卡死了，导致端口占用，出现此错误。
  解决方法：首先用lsof:80看下80端口被什么程序占用。lsof返回结果如下：
　　COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
　　nginx 3274 root 6u IPv4 10664 0t0 TCP *:http (LISTEN)
　　nginx 3547 nginx 6u IPv4 10664 0t0 TCP *:http (LISTEN)
　发现是nginx程序，所以我们把nginx服务k掉，重新启动服务。。命令如下:
　　kill -9 3274
　　kill -9 3547
　　或者 killall -9 nginx
　从新载入配置文件启动 /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf


(2)连接数不对
    启动成功了但是发现一个错误信息
　　  [warn]: 51200 worker_connections are more than open file resource limit: 51200
　　虽然不是致命的问题 不影响nginx运行 但是看起来很烦人
  解决方法:
　　nginx.conf 配置问题
　　  events {
　  　use epoll;
　　  worker_connections 51200; // 这里出的问题
　　}
  问题原因是: Linux的最大文件数限制。修改Linux 文件数限制 ulimit -n 51200
　　[root@localhost ~]# ulimit -n
　　[root@localhost ~]#
　　接下来从新载入配置文件重启动Ok了....

　　
(3)nginx error_log 错误日志配置说明
　　nginx的error_log类型如下(从左到右：debug最详细 crit最少)：
　　[ debug | info | notice | warn | error | crit ]
  例如：error_log logs/nginx_error.log crit;
  解释：日志文件存储在nginx安装目录下的 logs/nginx_error.log ，错误类型为 crit ，也就是记录最少错误信息;
  注意error_log off并不能关闭日志记录功能，它将日志文件写入一个文件名为off的文件中，如果你想关闭错误日志记录功能，应使用以下配置：
　　error_log /dev/null crit;
　　把存储位置设置到Linux的黑洞中去
  同样注意0.7.53版本，nginx在读取配置文件指定的错误日志路径前将使用编译的默认日志位置，如果运行nginx的用户对该位置没有写入权限，nginx将输出如下错误：
　　[alert]: could not open error log file: open() "/var/log/nginx/error.log" failed (13: Permission denied) log_not_found 语法：log_not_found on | off
　　默认值：on
　　使用字段：location
　　这个参数指定了是否记录客户端的请求出现404错误的日志，通常用于不存在的robots.txt和favicon.ico文件，例如： location = /robots.txt { log_not_found off; }


(4)最后：所有nginx配置发生改变时，最好都使用如下命令测试配置是否错误后再使用 -s reload 重载
　　# /usr/local/nginx/sbin/nginx –t
　　说明：
　　  1、# 代表root权限，不用输入
　　  2、以上是nginx的默认安装路径，如果改变了要相应的修改哦，例如 wdcp 的 lanmp 一键安装包 则如需要用如下命令
　　# /www/wdlinux/nginx/sbin/nginx -s reload
　　输入后如果提示如下，则表示配置无误：
　　  nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
　　  nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful
　　这时再使用重载命令让Nginx平滑的重新加载配置即可，而不会影响正常访问：
　　# /usr/local/nginx/sbin/nginx -s reload


